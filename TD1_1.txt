TD1/9: Use basic Linux commands


Exercise 1: Move around

1. Go to the root directory
cd /

2. Display the content of the current (root) directory
ls

3. Check your current location
pwd 

4. Try to create a directory named test
mkdir test

5. Go to the general home directory (should contain folders named after
each user)
cd 

6. Go to your home directory
cd /home

7. Go back to the general home directory (located "just above")
cd ..

8. Go again "just above", you should be back to the root directory
cd ..

9. Go directly to your home directory (named after you). It should be a
very simple command, which take no name as parameter of the path
cd /admin

10. Try to create a directory named test
mkdir test

11. Go into this new directory
cd test

12. Check your current location
pwd



Exercise 2: Create, Rename, copy, delete

1. Go to your home directory (should be named after you, you might be
there by default)
cd

2. Check your current location
pwd

3. Create a folder linux_ex_1
mkdir linux_ex_1

4. Go into this folder
cd linux_ex_1

5. Create an empty text file named [first_name]_[last_name].txt 
touch victor_thomas.txt


6. Create a folder notes
mkdir notes

7. Move your text file into this folder
mv victor_thomas.txt notes

8. Rename the text file by appending the current year [first_name]_[last_name]_[current_year].txt
mv victor_thomas.txt victor_thomas_2023.txt

9. Make a copy of this folder, name it notes_2022
cp -r notes notes_2023

10. Delete the first folder (notes) using the verbose option
rm -r notes



Exercise 3: Create and run a script

1. Create a script script_1.sh in the folder linux_ex_1
cd linux_ex_1
nano script_1.sh

2. In the script, write the commands that would output the following :
Script running please wait ...
Done.
echo "Script running please wait ..."
# Your commands go here
echo "Done."

3. Quit editing and save the script
esc + : + wq!

4. Display the content of the script (using a command, not from an editor)
cat script_1.sh

5. Run the script 1
chmod +x script_1.sh
./script_1.sh

Exercise 4: Accessing or modifying a file permissions and root privilege

Exercise 4.1: Change the rights for accessing or modifying a file

1.Create a file credentials in the folder linux_ex_1
    (a) Write any kind of (fake) personal information within the file


echo "Name: Victor THOMAS
Datedenaissance: 30/01/1990" > linux_ex_1/credentials

(b) Display the file content


cat linux_ex_1/credentials

(c) Display the current permissions


ls -l linux_ex_1/credentials

2.    Change the current permissions to: read only for all users
    (a) Display the new permissions


chmod a-wx linux_ex_1/credentials
ls -l linux_ex_1/credentials

(b) Modify and save the file


echo "Modified credentials" > linux_ex_1/credentials
vi credentials
esc + : + wq!

(c) Display the file content


cat linux_ex_1/credentials

    Change the permissions back to read and write for all users
3.    (a) Display the new permissions


chmod a+rw linux_ex_1/credentials
ls -l linux_ex_1/credentials

(b) Modify and save the file


echo "Updated credentials" > linux_ex_1/credentials

(c) Display the file content


cat linux_ex_1/credentials

3.On the same file:

    Add the execute permission to the owner
    (a) Display the new permissions


chmod u+x linux_ex_1/credentials
ls -l linux_ex_1/credentials

    Remove the read permission to other users
    (b) Display the new permissions


chmod o-r linux_ex_1/credentials
ls -l linux_ex_1/credentials

    Change the permissions to read, write and execute for all users
    (c) Display the new permissions


chmod a+rwx linux_ex_1/credentials
ls -l linux_ex_1/credentials

Exercise 4.2: Access root files

 1.   Go to the root folder


cd /

2.    Create a file in root user mode named .private_file
    (a) Write some information in the file


sudo touch .private_file
sudo bash -c 'echo "Top secret information" > .private_file'

(b) Display the file content


sudo cat .private_file

(c) Display all the files in the folder including hidden files


sudo ls -la /

3.
    Modify the file in normal user mode
    (a) Write some new information in the file

nano .private_file

(b) Display the file content


cat .private_file

 4.   Modify the file in root user mode
    (a) Write some new information in the file

sudo nano .private_file

(b) Display the file content

5.

sudo cat .private_file

    Change permissions to read, write and execute for all users
    (a) Modify the file content in normal user mode

nano .private_file

(b) Display the file content

cat .private_file

Exercise 4.3 Change a file owner

 1.   Change permissions of .private_file to read and write for all users, in normal user mode.



chmod a+rw .private_file

  2.  Set the new file owner as the current user.


sudo chown $USER:$USER .private_file

  3.  Change permissions of .private_file to read and write for all users, in normal user mode.


chmod a+rw .private_file

Q1. Update your main package manager named apt.


sudo apt update

Q2. Upgrade apt.

sudo apt upgrade

Q3. Install the package cmatrix.

sudo apt install cmatrix

Q4. Launch cmatrix.

cmatrix

Q5. Quit cmatrix.

Press Ctrl + C to quit.

Q6. Install the package tmux.

sudo apt install tmux

Q7. Launch tmux.

tmux

Q8. Say "Hello session 0" using bash in your current tmux session.

Type the following command in the terminal within tmux session:

echo "Hello session 0"

Q9. Launch cmatrix in your current tmux session.

cmatrix

Q10. Detach from the current tmux session (without stopping cmatrix).

Press Ctrl + B, then D.

Q11. Create a new tmux session.


tmux new-session -s mysession

Q12. Say "Hello session 1" using bash in your new tmux session.

Type the following command in the terminal within tmux session:

echo "Hello session 1"

Q13. Detach from the current tmux session.

Press Ctrl + B, then D.

Q14. List all running sessions.

tmux ls

Q15. Attach again to session 0.


tmux attach-session -t 0

Q16. Detach again.

Press Ctrl + B, then D.

Q17. Attach again to session 1.

tmux attach-session -t mysession

Q18. Detach again.

Press Ctrl + B, then D.

Q19. List all running sessions.

tmux ls

Q20. Kill all tmux sessions and quit tmux.

tmux kill-server

Q21. List all sessions.

tmux ls

